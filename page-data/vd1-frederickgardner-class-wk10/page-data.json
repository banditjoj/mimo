{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/vd1-frederickgardner-class-wk10","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"vd1-with-frederick-gardner\"\n  }, \"VD1 with Frederick Gardner\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/vd1-frederickgardner-class-wk1\",\n    \"title\": \"vd1-frederickgardner-class-wk1\"\n  }, \"[[vd1-frederickgardner-class-wk1]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/vd1-frederickgardner-class-wk2\",\n    \"title\": \"vd1-frederickgardner-class-wk2\"\n  }, \"[[vd1-frederickgardner-class-wk2]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/vd1-frederickgardner-class-wk3\",\n    \"title\": \"vd1-frederickgardner-class-wk3\"\n  }, \"[[vd1-frederickgardner-class-wk3]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/vd1-frederickgardner-class-wk4\",\n    \"title\": \"vd1-frederickgardner-class-wk4\"\n  }, \"[[vd1-frederickgardner-class-wk4]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/vd1-frederickgardner-class-wk5\",\n    \"title\": \"vd1-frederickgardner-class-wk5\"\n  }, \"[[vd1-frederickgardner-class-wk5]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/vd1-frederickgardner-class-wk6\",\n    \"title\": \"vd1-frederickgardner-class-wk6\"\n  }, \"[[vd1-frederickgardner-class-wk6]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/vd1-frederickgardner-class-wk7\",\n    \"title\": \"vd1-frederickgardner-class-wk7\"\n  }, \"[[vd1-frederickgardner-class-wk7]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/vd1-frederickgardner-class-wk8\",\n    \"title\": \"vd1-frederickgardner-class-wk8\"\n  }, \"[[vd1-frederickgardner-class-wk8]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/vd1-frederickgardner-class-wk9\",\n    \"title\": \"vd1-frederickgardner-class-wk9\"\n  }, \"[[vd1-frederickgardner-class-wk9]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/vd1-frederickgardner-class-wk10\",\n    \"title\": \"vd1-frederickgardner-class-wk10\"\n  }, \"[[vd1-frederickgardner-class-wk10]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"63beda86-eedb-5ed7-b3e9-f1948d0cbc40","fields":{"slug":"/vd1-frederickgardner-class","title":"VD1 with Frederick Gardner"}}}]},"fields":{"slug":"/vd1-frederickgardner-class-wk10","title":"vd1-frederickgardner-class-wk10"}}},"pageContext":{"id":"dc6a122b-744a-5892-83b1-342938fa8b78"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}